// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module design_0_v_demosaic_0_0_ZipperRemoval_Pipeline_VITIS_LOOP_1051_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgRgb_dout,
        imgRgb_empty_n,
        imgRgb_read,
        imgUnzip_din,
        imgUnzip_full_n,
        imgUnzip_write,
        b_V_4_0732,
        b_V_3_0731,
        b_V_2_0730,
        b_V_1_0729,
        b_V_0_0,
        g_V_4_0728,
        g_V_3_0727,
        g_V_2_0726,
        g_V_1_0725,
        g_V_0_0,
        r_V_4_0724,
        r_V_3_0723,
        r_V_2_0722,
        r_V_1_0721,
        r_V_0_0,
        luma_V_4_0720,
        luma_V_3_0719,
        luma_V_2_0718,
        luma_V_1_0717,
        luma_V_0_0,
        inpix_val_V_11_0716,
        inpix_val_V_10_0715,
        inpix_val_V_9_0714,
        inpix_val_V_8_0713,
        inpix_val_V_7_0712,
        inpix_val_V_6_0711,
        inpix_val_V_5_0710,
        inpix_val_V_4_0709,
        inpix_val_V_3_0708,
        inpix_val_V_2_0707,
        inpix_val_V_1_0706,
        inpix_val_V_0_0705,
        empty,
        zext_ln1035,
        b_V_4_1_out,
        b_V_4_1_out_ap_vld,
        outpix_val_V_1_out,
        outpix_val_V_1_out_ap_vld,
        outpix_val_V_4_out,
        outpix_val_V_4_out_ap_vld,
        outpix_val_V_7_out,
        outpix_val_V_7_out_ap_vld,
        outpix_val_V_10_out,
        outpix_val_V_10_out_ap_vld,
        g_V_4_1_out,
        g_V_4_1_out_ap_vld,
        outpix_val_V_0_out,
        outpix_val_V_0_out_ap_vld,
        outpix_val_V_3_out,
        outpix_val_V_3_out_ap_vld,
        outpix_val_V_6_out,
        outpix_val_V_6_out_ap_vld,
        outpix_val_V_9_out,
        outpix_val_V_9_out_ap_vld,
        r_V_4_1_out,
        r_V_4_1_out_ap_vld,
        outpix_val_V_2_out,
        outpix_val_V_2_out_ap_vld,
        outpix_val_V_5_out,
        outpix_val_V_5_out_ap_vld,
        outpix_val_V_8_out,
        outpix_val_V_8_out_ap_vld,
        outpix_val_V_11_out,
        outpix_val_V_11_out_ap_vld,
        luma_V_4_1_out,
        luma_V_4_1_out_ap_vld,
        luma_V_3_1_out,
        luma_V_3_1_out_ap_vld,
        luma_V_2_1_out,
        luma_V_2_1_out_ap_vld,
        luma_V_1_1_out,
        luma_V_1_1_out_ap_vld,
        luma_V_0_1_out,
        luma_V_0_1_out_ap_vld,
        inpix_val_V_11_1_out,
        inpix_val_V_11_1_out_ap_vld,
        inpix_val_V_10_1_out,
        inpix_val_V_10_1_out_ap_vld,
        inpix_val_V_9_1_out,
        inpix_val_V_9_1_out_ap_vld,
        inpix_val_V_8_1_out,
        inpix_val_V_8_1_out_ap_vld,
        inpix_val_V_7_1_out,
        inpix_val_V_7_1_out_ap_vld,
        inpix_val_V_6_1_out,
        inpix_val_V_6_1_out_ap_vld,
        inpix_val_V_5_1_out,
        inpix_val_V_5_1_out_ap_vld,
        inpix_val_V_4_1_out,
        inpix_val_V_4_1_out_ap_vld,
        inpix_val_V_3_1_out,
        inpix_val_V_3_1_out_ap_vld,
        inpix_val_V_2_1_out,
        inpix_val_V_2_1_out_ap_vld,
        inpix_val_V_1_1_out,
        inpix_val_V_1_1_out_ap_vld,
        inpix_val_V_0_1_out,
        inpix_val_V_0_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [95:0] imgRgb_dout;
input   imgRgb_empty_n;
output   imgRgb_read;
output  [95:0] imgUnzip_din;
input   imgUnzip_full_n;
output   imgUnzip_write;
input  [7:0] b_V_4_0732;
input  [7:0] b_V_3_0731;
input  [7:0] b_V_2_0730;
input  [7:0] b_V_1_0729;
input  [7:0] b_V_0_0;
input  [7:0] g_V_4_0728;
input  [7:0] g_V_3_0727;
input  [7:0] g_V_2_0726;
input  [7:0] g_V_1_0725;
input  [7:0] g_V_0_0;
input  [7:0] r_V_4_0724;
input  [7:0] r_V_3_0723;
input  [7:0] r_V_2_0722;
input  [7:0] r_V_1_0721;
input  [7:0] r_V_0_0;
input  [7:0] luma_V_4_0720;
input  [7:0] luma_V_3_0719;
input  [7:0] luma_V_2_0718;
input  [7:0] luma_V_1_0717;
input  [7:0] luma_V_0_0;
input  [7:0] inpix_val_V_11_0716;
input  [7:0] inpix_val_V_10_0715;
input  [7:0] inpix_val_V_9_0714;
input  [7:0] inpix_val_V_8_0713;
input  [7:0] inpix_val_V_7_0712;
input  [7:0] inpix_val_V_6_0711;
input  [7:0] inpix_val_V_5_0710;
input  [7:0] inpix_val_V_4_0709;
input  [7:0] inpix_val_V_3_0708;
input  [7:0] inpix_val_V_2_0707;
input  [7:0] inpix_val_V_1_0706;
input  [7:0] inpix_val_V_0_0705;
input  [16:0] empty;
input  [15:0] zext_ln1035;
output  [7:0] b_V_4_1_out;
output   b_V_4_1_out_ap_vld;
output  [7:0] outpix_val_V_1_out;
output   outpix_val_V_1_out_ap_vld;
output  [7:0] outpix_val_V_4_out;
output   outpix_val_V_4_out_ap_vld;
output  [7:0] outpix_val_V_7_out;
output   outpix_val_V_7_out_ap_vld;
output  [7:0] outpix_val_V_10_out;
output   outpix_val_V_10_out_ap_vld;
output  [7:0] g_V_4_1_out;
output   g_V_4_1_out_ap_vld;
output  [7:0] outpix_val_V_0_out;
output   outpix_val_V_0_out_ap_vld;
output  [7:0] outpix_val_V_3_out;
output   outpix_val_V_3_out_ap_vld;
output  [7:0] outpix_val_V_6_out;
output   outpix_val_V_6_out_ap_vld;
output  [7:0] outpix_val_V_9_out;
output   outpix_val_V_9_out_ap_vld;
output  [7:0] r_V_4_1_out;
output   r_V_4_1_out_ap_vld;
output  [7:0] outpix_val_V_2_out;
output   outpix_val_V_2_out_ap_vld;
output  [7:0] outpix_val_V_5_out;
output   outpix_val_V_5_out_ap_vld;
output  [7:0] outpix_val_V_8_out;
output   outpix_val_V_8_out_ap_vld;
output  [7:0] outpix_val_V_11_out;
output   outpix_val_V_11_out_ap_vld;
output  [7:0] luma_V_4_1_out;
output   luma_V_4_1_out_ap_vld;
output  [7:0] luma_V_3_1_out;
output   luma_V_3_1_out_ap_vld;
output  [7:0] luma_V_2_1_out;
output   luma_V_2_1_out_ap_vld;
output  [7:0] luma_V_1_1_out;
output   luma_V_1_1_out_ap_vld;
output  [7:0] luma_V_0_1_out;
output   luma_V_0_1_out_ap_vld;
output  [7:0] inpix_val_V_11_1_out;
output   inpix_val_V_11_1_out_ap_vld;
output  [7:0] inpix_val_V_10_1_out;
output   inpix_val_V_10_1_out_ap_vld;
output  [7:0] inpix_val_V_9_1_out;
output   inpix_val_V_9_1_out_ap_vld;
output  [7:0] inpix_val_V_8_1_out;
output   inpix_val_V_8_1_out_ap_vld;
output  [7:0] inpix_val_V_7_1_out;
output   inpix_val_V_7_1_out_ap_vld;
output  [7:0] inpix_val_V_6_1_out;
output   inpix_val_V_6_1_out_ap_vld;
output  [7:0] inpix_val_V_5_1_out;
output   inpix_val_V_5_1_out_ap_vld;
output  [7:0] inpix_val_V_4_1_out;
output   inpix_val_V_4_1_out_ap_vld;
output  [7:0] inpix_val_V_3_1_out;
output   inpix_val_V_3_1_out_ap_vld;
output  [7:0] inpix_val_V_2_1_out;
output   inpix_val_V_2_1_out_ap_vld;
output  [7:0] inpix_val_V_1_1_out;
output   inpix_val_V_1_1_out_ap_vld;
output  [7:0] inpix_val_V_0_1_out;
output   inpix_val_V_0_1_out_ap_vld;

reg ap_idle;
reg imgRgb_read;
reg imgUnzip_write;
reg b_V_4_1_out_ap_vld;
reg outpix_val_V_1_out_ap_vld;
reg outpix_val_V_4_out_ap_vld;
reg outpix_val_V_7_out_ap_vld;
reg outpix_val_V_10_out_ap_vld;
reg g_V_4_1_out_ap_vld;
reg outpix_val_V_0_out_ap_vld;
reg outpix_val_V_3_out_ap_vld;
reg outpix_val_V_6_out_ap_vld;
reg outpix_val_V_9_out_ap_vld;
reg r_V_4_1_out_ap_vld;
reg outpix_val_V_2_out_ap_vld;
reg outpix_val_V_5_out_ap_vld;
reg outpix_val_V_8_out_ap_vld;
reg outpix_val_V_11_out_ap_vld;
reg luma_V_4_1_out_ap_vld;
reg luma_V_3_1_out_ap_vld;
reg luma_V_2_1_out_ap_vld;
reg luma_V_1_1_out_ap_vld;
reg luma_V_0_1_out_ap_vld;
reg inpix_val_V_11_1_out_ap_vld;
reg inpix_val_V_10_1_out_ap_vld;
reg inpix_val_V_9_1_out_ap_vld;
reg inpix_val_V_8_1_out_ap_vld;
reg inpix_val_V_7_1_out_ap_vld;
reg inpix_val_V_6_1_out_ap_vld;
reg inpix_val_V_5_1_out_ap_vld;
reg inpix_val_V_4_1_out_ap_vld;
reg inpix_val_V_3_1_out_ap_vld;
reg inpix_val_V_2_1_out_ap_vld;
reg inpix_val_V_1_1_out_ap_vld;
reg inpix_val_V_0_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln1051_reg_2946;
reg   [0:0] icmp_ln1057_reg_2950;
reg    ap_predicate_op123_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln1109_reg_2954;
reg   [0:0] icmp_ln1109_reg_2954_pp0_iter2_reg;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1051_fu_989_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    imgRgb_blk_n;
wire    ap_block_pp0_stage0;
reg    imgUnzip_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1051_reg_2946_pp0_iter1_reg;
wire   [0:0] icmp_ln1057_fu_995_p2;
wire   [0:0] icmp_ln1109_fu_1001_p2;
reg   [0:0] icmp_ln1109_reg_2954_pp0_iter1_reg;
wire   [7:0] outpix_val_V_2_3_fu_1842_p3;
reg   [7:0] outpix_val_V_2_3_reg_2958;
wire   [7:0] outpix_val_V_1_3_fu_1858_p3;
reg   [7:0] outpix_val_V_1_3_reg_2963;
wire   [7:0] outpix_val_V_0_3_fu_1874_p3;
reg   [7:0] outpix_val_V_0_3_reg_2968;
wire   [7:0] outpix_val_V_5_3_fu_2034_p3;
reg   [7:0] outpix_val_V_5_3_reg_2973;
wire   [7:0] outpix_val_V_4_3_fu_2050_p3;
reg   [7:0] outpix_val_V_4_3_reg_2978;
wire   [7:0] outpix_val_V_3_3_fu_2066_p3;
reg   [7:0] outpix_val_V_3_3_reg_2983;
wire   [7:0] outpix_val_V_8_3_fu_2226_p3;
reg   [7:0] outpix_val_V_8_3_reg_2988;
wire   [7:0] outpix_val_V_7_3_fu_2242_p3;
reg   [7:0] outpix_val_V_7_3_reg_2993;
wire   [7:0] outpix_val_V_6_3_fu_2258_p3;
reg   [7:0] outpix_val_V_6_3_reg_2998;
wire   [7:0] outpix_val_V_11_7_fu_2418_p3;
reg   [7:0] outpix_val_V_11_7_reg_3003;
wire   [7:0] outpix_val_V_10_7_fu_2434_p3;
reg   [7:0] outpix_val_V_10_7_reg_3008;
wire   [7:0] outpix_val_V_9_7_fu_2450_p3;
reg   [7:0] outpix_val_V_9_7_reg_3013;
reg    ap_condition_exit_pp0_iter2_stage0;
reg   [31:0] x_fu_240;
wire    ap_loop_init;
reg   [31:0] ap_sig_allocacmp_x_2;
wire   [31:0] x_3_fu_1007_p2;
reg   [7:0] luma_V_1_1_fu_244;
wire   [7:0] zext_ln1082_2_fu_1564_p1;
reg   [7:0] luma_V_2_1_fu_248;
wire   [7:0] zext_ln1082_1_fu_1472_p1;
reg   [7:0] luma_V_3_1_fu_252;
wire   [7:0] zext_ln1082_fu_1380_p1;
reg   [7:0] luma_V_4_1_fu_256;
reg   [7:0] outpix_val_V_8_fu_260;
reg   [7:0] outpix_val_V_5_fu_264;
reg   [7:0] outpix_val_V_2_fu_268;
reg   [7:0] outpix_val_V_11_4_fu_272;
reg   [7:0] outpix_val_V_6_fu_276;
reg   [7:0] outpix_val_V_3_fu_280;
reg   [7:0] outpix_val_V_0_fu_284;
reg   [7:0] outpix_val_V_9_4_fu_288;
reg   [7:0] outpix_val_V_7_fu_292;
reg   [7:0] outpix_val_V_4_fu_296;
reg   [7:0] outpix_val_V_1_fu_300;
reg   [7:0] outpix_val_V_10_4_fu_304;
reg   [7:0] inpix_val_V_0_fu_308;
wire   [7:0] inpix_val_V_0_1_fu_1018_p1;
reg   [7:0] inpix_val_V_1_1_fu_312;
reg   [7:0] inpix_val_V_2_1_fu_316;
reg   [7:0] inpix_val_V_3_1_fu_320;
reg   [7:0] inpix_val_V_4_1_fu_324;
reg   [7:0] inpix_val_V_5_1_fu_328;
reg   [7:0] inpix_val_V_6_1_fu_332;
reg   [7:0] inpix_val_V_7_1_fu_336;
reg   [7:0] inpix_val_V_8_1_fu_340;
reg   [7:0] inpix_val_V_9_1_fu_344;
reg   [7:0] inpix_val_V_10_1_fu_348;
reg   [7:0] inpix_val_V_11_1_fu_352;
reg   [7:0] luma_V_0_1_fu_356;
wire   [7:0] zext_ln1082_3_fu_1656_p1;
reg   [7:0] outpix_val_V_11_fu_360;
reg   [7:0] outpix_val_V_9_fu_364;
reg   [7:0] outpix_val_V_10_fu_368;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] p_cast_fu_817_p1;
wire   [31:0] zext_ln1035_cast_fu_813_p1;
wire   [5:0] lshr_ln_fu_1292_p4;
wire   [6:0] lshr_ln1079_1_fu_1306_p4;
wire   [4:0] trunc_ln_fu_1320_p4;
wire   [4:0] trunc_ln1079_1_fu_1334_p4;
wire   [7:0] zext_ln1079_13_fu_1316_p1;
wire   [7:0] zext_ln1079_12_fu_1302_p1;
wire   [5:0] zext_ln1079_fu_1330_p1;
wire   [5:0] zext_ln1079_1_fu_1344_p1;
wire   [5:0] add_ln1079_1_fu_1354_p2;
wire   [7:0] zext_ln1079_2_fu_1360_p1;
wire   [7:0] add_ln1079_fu_1348_p2;
wire   [7:0] add_ln1079_2_fu_1364_p2;
wire   [4:0] lshr_ln1_fu_1370_p4;
wire   [5:0] lshr_ln1079_4_fu_1384_p4;
wire   [6:0] lshr_ln1079_5_fu_1398_p4;
wire   [4:0] trunc_ln1079_2_fu_1412_p4;
wire   [4:0] trunc_ln1079_3_fu_1426_p4;
wire   [7:0] zext_ln1079_15_fu_1408_p1;
wire   [7:0] zext_ln1079_14_fu_1394_p1;
wire   [5:0] zext_ln1079_3_fu_1422_p1;
wire   [5:0] zext_ln1079_4_fu_1436_p1;
wire   [5:0] add_ln1079_4_fu_1446_p2;
wire   [7:0] zext_ln1079_5_fu_1452_p1;
wire   [7:0] add_ln1079_3_fu_1440_p2;
wire   [7:0] add_ln1079_5_fu_1456_p2;
wire   [4:0] lshr_ln1082_1_fu_1462_p4;
wire   [5:0] lshr_ln1079_8_fu_1476_p4;
wire   [6:0] lshr_ln1079_9_fu_1490_p4;
wire   [4:0] trunc_ln1079_4_fu_1504_p4;
wire   [4:0] trunc_ln1079_5_fu_1518_p4;
wire   [7:0] zext_ln1079_17_fu_1500_p1;
wire   [7:0] zext_ln1079_16_fu_1486_p1;
wire   [5:0] zext_ln1079_6_fu_1514_p1;
wire   [5:0] zext_ln1079_7_fu_1528_p1;
wire   [5:0] add_ln1079_7_fu_1538_p2;
wire   [7:0] zext_ln1079_8_fu_1544_p1;
wire   [7:0] add_ln1079_6_fu_1532_p2;
wire   [7:0] add_ln1079_8_fu_1548_p2;
wire   [4:0] lshr_ln1082_2_fu_1554_p4;
wire   [5:0] lshr_ln1079_s_fu_1568_p4;
wire   [6:0] lshr_ln1079_2_fu_1582_p4;
wire   [4:0] trunc_ln1079_6_fu_1596_p4;
wire   [4:0] trunc_ln1079_7_fu_1610_p4;
wire   [7:0] zext_ln1079_19_fu_1592_p1;
wire   [7:0] zext_ln1079_18_fu_1578_p1;
wire   [5:0] zext_ln1079_9_fu_1606_p1;
wire   [5:0] zext_ln1079_10_fu_1620_p1;
wire   [5:0] add_ln1079_10_fu_1630_p2;
wire   [7:0] zext_ln1079_11_fu_1636_p1;
wire   [7:0] add_ln1079_9_fu_1624_p2;
wire   [7:0] add_ln1079_11_fu_1640_p2;
wire   [4:0] lshr_ln1082_3_fu_1646_p4;
wire   [8:0] shl_ln_fu_1676_p3;
wire   [8:0] zext_ln1525_1_fu_1684_p1;
wire   [8:0] zext_ln1525_3_fu_1692_p1;
wire   [8:0] add_ln1525_fu_1696_p2;
wire   [9:0] zext_ln1525_5_fu_1702_p1;
wire   [9:0] zext_ln1525_fu_1688_p1;
wire   [9:0] add_ln1525_1_fu_1706_p2;
wire   [8:0] shl_ln1524_1_fu_1726_p3;
wire   [8:0] zext_ln1525_7_fu_1734_p1;
wire   [8:0] zext_ln1525_9_fu_1742_p1;
wire   [8:0] add_ln1525_2_fu_1746_p2;
wire   [9:0] zext_ln1525_11_fu_1752_p1;
wire   [9:0] zext_ln1525_2_fu_1738_p1;
wire   [9:0] add_ln1525_3_fu_1756_p2;
wire   [8:0] shl_ln1524_2_fu_1776_p3;
wire   [8:0] zext_ln1525_13_fu_1784_p1;
wire   [8:0] zext_ln1525_15_fu_1792_p1;
wire   [8:0] add_ln1525_4_fu_1796_p2;
wire   [9:0] zext_ln1525_17_fu_1802_p1;
wire   [9:0] zext_ln1525_4_fu_1788_p1;
wire   [9:0] add_ln1525_5_fu_1806_p2;
wire   [0:0] icmp_ln1057_1_fu_1660_p2;
wire   [0:0] icmp_ln1061_fu_1666_p2;
wire   [0:0] and_ln1061_fu_1822_p2;
wire   [7:0] outpix_val_V_2_1_fu_1712_p4;
wire   [0:0] or_ln1061_fu_1836_p2;
wire   [7:0] outpix_val_V_2_2_fu_1828_p3;
wire   [7:0] outpix_val_V_1_1_fu_1812_p4;
wire   [7:0] outpix_val_V_1_2_fu_1850_p3;
wire   [7:0] outpix_val_V_0_1_fu_1762_p4;
wire   [7:0] outpix_val_V_0_2_fu_1866_p3;
wire   [8:0] shl_ln1524_3_fu_1888_p3;
wire   [8:0] zext_ln1525_19_fu_1896_p1;
wire   [8:0] zext_ln1524_fu_1672_p1;
wire   [8:0] add_ln1525_6_fu_1904_p2;
wire   [9:0] zext_ln1525_21_fu_1910_p1;
wire   [9:0] zext_ln1525_6_fu_1900_p1;
wire   [9:0] add_ln1525_7_fu_1914_p2;
wire   [8:0] shl_ln1524_4_fu_1930_p3;
wire   [8:0] zext_ln1525_23_fu_1938_p1;
wire   [8:0] zext_ln1524_1_fu_1722_p1;
wire   [8:0] add_ln1525_8_fu_1946_p2;
wire   [9:0] zext_ln1525_24_fu_1952_p1;
wire   [9:0] zext_ln1525_8_fu_1942_p1;
wire   [9:0] add_ln1525_9_fu_1956_p2;
wire   [8:0] shl_ln1524_5_fu_1972_p3;
wire   [8:0] zext_ln1525_25_fu_1980_p1;
wire   [8:0] zext_ln1524_2_fu_1772_p1;
wire   [8:0] add_ln1525_10_fu_1988_p2;
wire   [9:0] zext_ln1525_26_fu_1994_p1;
wire   [9:0] zext_ln1525_10_fu_1984_p1;
wire   [9:0] add_ln1525_11_fu_1998_p2;
wire   [0:0] icmp_ln1061_1_fu_1882_p2;
wire   [0:0] and_ln1061_1_fu_2014_p2;
wire   [7:0] outpix_val_V_5_1_fu_1920_p4;
wire   [0:0] or_ln1061_1_fu_2028_p2;
wire   [7:0] outpix_val_V_5_2_fu_2020_p3;
wire   [7:0] outpix_val_V_4_1_fu_2004_p4;
wire   [7:0] outpix_val_V_4_2_fu_2042_p3;
wire   [7:0] outpix_val_V_3_1_fu_1962_p4;
wire   [7:0] outpix_val_V_3_2_fu_2058_p3;
wire   [8:0] shl_ln1524_6_fu_2080_p3;
wire   [8:0] zext_ln1525_27_fu_2088_p1;
wire   [8:0] add_ln1525_12_fu_2096_p2;
wire   [9:0] zext_ln1525_28_fu_2102_p1;
wire   [9:0] zext_ln1525_12_fu_2092_p1;
wire   [9:0] add_ln1525_13_fu_2106_p2;
wire   [8:0] shl_ln1524_7_fu_2122_p3;
wire   [8:0] zext_ln1525_29_fu_2130_p1;
wire   [8:0] add_ln1525_14_fu_2138_p2;
wire   [9:0] zext_ln1525_30_fu_2144_p1;
wire   [9:0] zext_ln1525_14_fu_2134_p1;
wire   [9:0] add_ln1525_15_fu_2148_p2;
wire   [8:0] shl_ln1524_8_fu_2164_p3;
wire   [8:0] zext_ln1525_31_fu_2172_p1;
wire   [8:0] add_ln1525_16_fu_2180_p2;
wire   [9:0] zext_ln1525_32_fu_2186_p1;
wire   [9:0] zext_ln1525_16_fu_2176_p1;
wire   [9:0] add_ln1525_17_fu_2190_p2;
wire   [0:0] icmp_ln1061_2_fu_2074_p2;
wire   [0:0] and_ln1061_2_fu_2206_p2;
wire   [7:0] outpix_val_V_8_1_fu_2112_p4;
wire   [0:0] or_ln1061_2_fu_2220_p2;
wire   [7:0] outpix_val_V_8_2_fu_2212_p3;
wire   [7:0] outpix_val_V_7_1_fu_2196_p4;
wire   [7:0] outpix_val_V_7_2_fu_2234_p3;
wire   [7:0] outpix_val_V_6_1_fu_2154_p4;
wire   [7:0] outpix_val_V_6_2_fu_2250_p3;
wire   [8:0] shl_ln1524_9_fu_2272_p3;
wire   [8:0] zext_ln1525_33_fu_2280_p1;
wire   [8:0] add_ln1525_18_fu_2288_p2;
wire   [9:0] zext_ln1525_34_fu_2294_p1;
wire   [9:0] zext_ln1525_18_fu_2284_p1;
wire   [9:0] add_ln1525_19_fu_2298_p2;
wire   [8:0] shl_ln1524_s_fu_2314_p3;
wire   [8:0] zext_ln1525_35_fu_2322_p1;
wire   [8:0] add_ln1525_20_fu_2330_p2;
wire   [9:0] zext_ln1525_36_fu_2336_p1;
wire   [9:0] zext_ln1525_20_fu_2326_p1;
wire   [9:0] add_ln1525_21_fu_2340_p2;
wire   [8:0] shl_ln1524_10_fu_2356_p3;
wire   [8:0] zext_ln1525_37_fu_2364_p1;
wire   [8:0] add_ln1525_22_fu_2372_p2;
wire   [9:0] zext_ln1525_38_fu_2378_p1;
wire   [9:0] zext_ln1525_22_fu_2368_p1;
wire   [9:0] add_ln1525_23_fu_2382_p2;
wire   [0:0] icmp_ln1061_3_fu_2266_p2;
wire   [0:0] and_ln1061_3_fu_2398_p2;
wire   [7:0] outpix_val_V_11_1_fu_2304_p4;
wire   [0:0] or_ln1061_3_fu_2412_p2;
wire   [7:0] outpix_val_V_11_6_fu_2404_p3;
wire   [7:0] outpix_val_V_10_1_fu_2388_p4;
wire   [7:0] outpix_val_V_10_6_fu_2426_p3;
wire   [7:0] outpix_val_V_9_1_fu_2346_p4;
wire   [7:0] outpix_val_V_9_6_fu_2442_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1452;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

design_0_v_demosaic_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inpix_val_V_0_fu_308 <= inpix_val_V_0_0705;
        end else if ((1'b1 == ap_condition_1452)) begin
            inpix_val_V_0_fu_308 <= inpix_val_V_0_1_fu_1018_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inpix_val_V_10_1_fu_348 <= inpix_val_V_10_0715;
        end else if ((1'b1 == ap_condition_1452)) begin
            inpix_val_V_10_1_fu_348 <= {{imgRgb_dout[87:80]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inpix_val_V_11_1_fu_352 <= inpix_val_V_11_0716;
        end else if ((1'b1 == ap_condition_1452)) begin
            inpix_val_V_11_1_fu_352 <= {{imgRgb_dout[95:88]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inpix_val_V_1_1_fu_312 <= inpix_val_V_1_0706;
        end else if ((1'b1 == ap_condition_1452)) begin
            inpix_val_V_1_1_fu_312 <= {{imgRgb_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inpix_val_V_2_1_fu_316 <= inpix_val_V_2_0707;
        end else if ((1'b1 == ap_condition_1452)) begin
            inpix_val_V_2_1_fu_316 <= {{imgRgb_dout[23:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inpix_val_V_3_1_fu_320 <= inpix_val_V_3_0708;
        end else if ((1'b1 == ap_condition_1452)) begin
            inpix_val_V_3_1_fu_320 <= {{imgRgb_dout[31:24]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inpix_val_V_4_1_fu_324 <= inpix_val_V_4_0709;
        end else if ((1'b1 == ap_condition_1452)) begin
            inpix_val_V_4_1_fu_324 <= {{imgRgb_dout[39:32]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inpix_val_V_5_1_fu_328 <= inpix_val_V_5_0710;
        end else if ((1'b1 == ap_condition_1452)) begin
            inpix_val_V_5_1_fu_328 <= {{imgRgb_dout[47:40]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inpix_val_V_6_1_fu_332 <= inpix_val_V_6_0711;
        end else if ((1'b1 == ap_condition_1452)) begin
            inpix_val_V_6_1_fu_332 <= {{imgRgb_dout[55:48]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inpix_val_V_7_1_fu_336 <= inpix_val_V_7_0712;
        end else if ((1'b1 == ap_condition_1452)) begin
            inpix_val_V_7_1_fu_336 <= {{imgRgb_dout[63:56]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inpix_val_V_8_1_fu_340 <= inpix_val_V_8_0713;
        end else if ((1'b1 == ap_condition_1452)) begin
            inpix_val_V_8_1_fu_340 <= {{imgRgb_dout[71:64]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inpix_val_V_9_1_fu_344 <= inpix_val_V_9_0714;
        end else if ((1'b1 == ap_condition_1452)) begin
            inpix_val_V_9_1_fu_344 <= {{imgRgb_dout[79:72]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            luma_V_0_1_fu_356 <= luma_V_0_0;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            luma_V_0_1_fu_356 <= zext_ln1082_3_fu_1656_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            luma_V_1_1_fu_244 <= luma_V_1_0717;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            luma_V_1_1_fu_244 <= zext_ln1082_2_fu_1564_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            luma_V_2_1_fu_248 <= luma_V_2_0718;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            luma_V_2_1_fu_248 <= zext_ln1082_1_fu_1472_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            luma_V_3_1_fu_252 <= luma_V_3_0719;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            luma_V_3_1_fu_252 <= zext_ln1082_fu_1380_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            luma_V_4_1_fu_256 <= luma_V_4_0720;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            luma_V_4_1_fu_256 <= luma_V_0_1_fu_356;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_0_fu_284 <= g_V_3_0727;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_0_fu_284 <= inpix_val_V_0_fu_308;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_10_4_fu_304 <= b_V_4_0732;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_10_4_fu_304 <= outpix_val_V_10_fu_368;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_10_fu_368 <= b_V_0_0;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_10_fu_368 <= inpix_val_V_10_1_fu_348;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_11_4_fu_272 <= r_V_4_0724;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_11_4_fu_272 <= outpix_val_V_11_fu_360;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_11_fu_360 <= r_V_0_0;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_11_fu_360 <= inpix_val_V_11_1_fu_352;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_1_fu_300 <= b_V_3_0731;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_1_fu_300 <= inpix_val_V_1_1_fu_312;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_2_fu_268 <= r_V_3_0723;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_2_fu_268 <= inpix_val_V_2_1_fu_316;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_3_fu_280 <= g_V_2_0726;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_3_fu_280 <= inpix_val_V_3_1_fu_320;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_4_fu_296 <= b_V_2_0730;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_4_fu_296 <= inpix_val_V_4_1_fu_324;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_5_fu_264 <= r_V_2_0722;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_5_fu_264 <= inpix_val_V_5_1_fu_328;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_6_fu_276 <= g_V_1_0725;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_6_fu_276 <= inpix_val_V_6_1_fu_332;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_7_fu_292 <= b_V_1_0729;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_7_fu_292 <= inpix_val_V_7_1_fu_336;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_8_fu_260 <= r_V_1_0721;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_8_fu_260 <= inpix_val_V_8_1_fu_340;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_9_4_fu_288 <= g_V_4_0728;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_9_4_fu_288 <= outpix_val_V_9_fu_364;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            outpix_val_V_9_fu_364 <= g_V_0_0;
        end else if (((icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            outpix_val_V_9_fu_364 <= inpix_val_V_9_1_fu_344;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1051_fu_989_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_240 <= x_3_fu_1007_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_240 <= 32'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln1051_reg_2946 <= icmp_ln1051_fu_989_p2;
        icmp_ln1051_reg_2946_pp0_iter1_reg <= icmp_ln1051_reg_2946;
        icmp_ln1109_reg_2954_pp0_iter1_reg <= icmp_ln1109_reg_2954;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1051_fu_989_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1057_reg_2950 <= icmp_ln1057_fu_995_p2;
        icmp_ln1109_reg_2954 <= icmp_ln1109_fu_1001_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1109_reg_2954_pp0_iter2_reg <= icmp_ln1109_reg_2954_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd0))) begin
        outpix_val_V_0_3_reg_2968 <= outpix_val_V_0_3_fu_1874_p3;
        outpix_val_V_10_7_reg_3008 <= outpix_val_V_10_7_fu_2434_p3;
        outpix_val_V_11_7_reg_3003 <= outpix_val_V_11_7_fu_2418_p3;
        outpix_val_V_1_3_reg_2963 <= outpix_val_V_1_3_fu_1858_p3;
        outpix_val_V_2_3_reg_2958 <= outpix_val_V_2_3_fu_1842_p3;
        outpix_val_V_3_3_reg_2983 <= outpix_val_V_3_3_fu_2066_p3;
        outpix_val_V_4_3_reg_2978 <= outpix_val_V_4_3_fu_2050_p3;
        outpix_val_V_5_3_reg_2973 <= outpix_val_V_5_3_fu_2034_p3;
        outpix_val_V_6_3_reg_2998 <= outpix_val_V_6_3_fu_2258_p3;
        outpix_val_V_7_3_reg_2993 <= outpix_val_V_7_3_fu_2242_p3;
        outpix_val_V_8_3_reg_2988 <= outpix_val_V_8_3_fu_2226_p3;
        outpix_val_V_9_7_reg_3013 <= outpix_val_V_9_7_fu_2450_p3;
    end
end

always @ (*) begin
    if (((icmp_ln1051_fu_989_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_2 = 32'd0;
    end else begin
        ap_sig_allocacmp_x_2 = x_fu_240;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        b_V_4_1_out_ap_vld = 1'b1;
    end else begin
        b_V_4_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        g_V_4_1_out_ap_vld = 1'b1;
    end else begin
        g_V_4_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op123_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgRgb_blk_n = imgRgb_empty_n;
    end else begin
        imgRgb_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op123_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgRgb_read = 1'b1;
    end else begin
        imgRgb_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1109_reg_2954_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imgUnzip_blk_n = imgUnzip_full_n;
    end else begin
        imgUnzip_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1109_reg_2954_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        imgUnzip_write = 1'b1;
    end else begin
        imgUnzip_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        inpix_val_V_0_1_out_ap_vld = 1'b1;
    end else begin
        inpix_val_V_0_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        inpix_val_V_10_1_out_ap_vld = 1'b1;
    end else begin
        inpix_val_V_10_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        inpix_val_V_11_1_out_ap_vld = 1'b1;
    end else begin
        inpix_val_V_11_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        inpix_val_V_1_1_out_ap_vld = 1'b1;
    end else begin
        inpix_val_V_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        inpix_val_V_2_1_out_ap_vld = 1'b1;
    end else begin
        inpix_val_V_2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        inpix_val_V_3_1_out_ap_vld = 1'b1;
    end else begin
        inpix_val_V_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        inpix_val_V_4_1_out_ap_vld = 1'b1;
    end else begin
        inpix_val_V_4_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        inpix_val_V_5_1_out_ap_vld = 1'b1;
    end else begin
        inpix_val_V_5_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        inpix_val_V_6_1_out_ap_vld = 1'b1;
    end else begin
        inpix_val_V_6_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        inpix_val_V_7_1_out_ap_vld = 1'b1;
    end else begin
        inpix_val_V_7_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        inpix_val_V_8_1_out_ap_vld = 1'b1;
    end else begin
        inpix_val_V_8_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        inpix_val_V_9_1_out_ap_vld = 1'b1;
    end else begin
        inpix_val_V_9_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        luma_V_0_1_out_ap_vld = 1'b1;
    end else begin
        luma_V_0_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        luma_V_1_1_out_ap_vld = 1'b1;
    end else begin
        luma_V_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        luma_V_2_1_out_ap_vld = 1'b1;
    end else begin
        luma_V_2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        luma_V_3_1_out_ap_vld = 1'b1;
    end else begin
        luma_V_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        luma_V_4_1_out_ap_vld = 1'b1;
    end else begin
        luma_V_4_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        outpix_val_V_0_out_ap_vld = 1'b1;
    end else begin
        outpix_val_V_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        outpix_val_V_10_out_ap_vld = 1'b1;
    end else begin
        outpix_val_V_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        outpix_val_V_11_out_ap_vld = 1'b1;
    end else begin
        outpix_val_V_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        outpix_val_V_1_out_ap_vld = 1'b1;
    end else begin
        outpix_val_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        outpix_val_V_2_out_ap_vld = 1'b1;
    end else begin
        outpix_val_V_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        outpix_val_V_3_out_ap_vld = 1'b1;
    end else begin
        outpix_val_V_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        outpix_val_V_4_out_ap_vld = 1'b1;
    end else begin
        outpix_val_V_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        outpix_val_V_5_out_ap_vld = 1'b1;
    end else begin
        outpix_val_V_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        outpix_val_V_6_out_ap_vld = 1'b1;
    end else begin
        outpix_val_V_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        outpix_val_V_7_out_ap_vld = 1'b1;
    end else begin
        outpix_val_V_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        outpix_val_V_8_out_ap_vld = 1'b1;
    end else begin
        outpix_val_V_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        outpix_val_V_9_out_ap_vld = 1'b1;
    end else begin
        outpix_val_V_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1051_reg_2946_pp0_iter1_reg == 1'd1))) begin
        r_V_4_1_out_ap_vld = 1'b1;
    end else begin
        r_V_4_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1079_10_fu_1630_p2 = (zext_ln1079_9_fu_1606_p1 + zext_ln1079_10_fu_1620_p1);

assign add_ln1079_11_fu_1640_p2 = (zext_ln1079_11_fu_1636_p1 + add_ln1079_9_fu_1624_p2);

assign add_ln1079_1_fu_1354_p2 = (zext_ln1079_fu_1330_p1 + zext_ln1079_1_fu_1344_p1);

assign add_ln1079_2_fu_1364_p2 = (zext_ln1079_2_fu_1360_p1 + add_ln1079_fu_1348_p2);

assign add_ln1079_3_fu_1440_p2 = (zext_ln1079_15_fu_1408_p1 + zext_ln1079_14_fu_1394_p1);

assign add_ln1079_4_fu_1446_p2 = (zext_ln1079_3_fu_1422_p1 + zext_ln1079_4_fu_1436_p1);

assign add_ln1079_5_fu_1456_p2 = (zext_ln1079_5_fu_1452_p1 + add_ln1079_3_fu_1440_p2);

assign add_ln1079_6_fu_1532_p2 = (zext_ln1079_17_fu_1500_p1 + zext_ln1079_16_fu_1486_p1);

assign add_ln1079_7_fu_1538_p2 = (zext_ln1079_6_fu_1514_p1 + zext_ln1079_7_fu_1528_p1);

assign add_ln1079_8_fu_1548_p2 = (zext_ln1079_8_fu_1544_p1 + add_ln1079_6_fu_1532_p2);

assign add_ln1079_9_fu_1624_p2 = (zext_ln1079_19_fu_1592_p1 + zext_ln1079_18_fu_1578_p1);

assign add_ln1079_fu_1348_p2 = (zext_ln1079_13_fu_1316_p1 + zext_ln1079_12_fu_1302_p1);

assign add_ln1525_10_fu_1988_p2 = (zext_ln1525_25_fu_1980_p1 + zext_ln1524_2_fu_1772_p1);

assign add_ln1525_11_fu_1998_p2 = (zext_ln1525_26_fu_1994_p1 + zext_ln1525_10_fu_1984_p1);

assign add_ln1525_12_fu_2096_p2 = (zext_ln1525_27_fu_2088_p1 + zext_ln1525_1_fu_1684_p1);

assign add_ln1525_13_fu_2106_p2 = (zext_ln1525_28_fu_2102_p1 + zext_ln1525_12_fu_2092_p1);

assign add_ln1525_14_fu_2138_p2 = (zext_ln1525_29_fu_2130_p1 + zext_ln1525_7_fu_1734_p1);

assign add_ln1525_15_fu_2148_p2 = (zext_ln1525_30_fu_2144_p1 + zext_ln1525_14_fu_2134_p1);

assign add_ln1525_16_fu_2180_p2 = (zext_ln1525_31_fu_2172_p1 + zext_ln1525_13_fu_1784_p1);

assign add_ln1525_17_fu_2190_p2 = (zext_ln1525_32_fu_2186_p1 + zext_ln1525_16_fu_2176_p1);

assign add_ln1525_18_fu_2288_p2 = (zext_ln1525_33_fu_2280_p1 + zext_ln1525_19_fu_1896_p1);

assign add_ln1525_19_fu_2298_p2 = (zext_ln1525_34_fu_2294_p1 + zext_ln1525_18_fu_2284_p1);

assign add_ln1525_1_fu_1706_p2 = (zext_ln1525_5_fu_1702_p1 + zext_ln1525_fu_1688_p1);

assign add_ln1525_20_fu_2330_p2 = (zext_ln1525_35_fu_2322_p1 + zext_ln1525_23_fu_1938_p1);

assign add_ln1525_21_fu_2340_p2 = (zext_ln1525_36_fu_2336_p1 + zext_ln1525_20_fu_2326_p1);

assign add_ln1525_22_fu_2372_p2 = (zext_ln1525_37_fu_2364_p1 + zext_ln1525_25_fu_1980_p1);

assign add_ln1525_23_fu_2382_p2 = (zext_ln1525_38_fu_2378_p1 + zext_ln1525_22_fu_2368_p1);

assign add_ln1525_2_fu_1746_p2 = (zext_ln1525_7_fu_1734_p1 + zext_ln1525_9_fu_1742_p1);

assign add_ln1525_3_fu_1756_p2 = (zext_ln1525_11_fu_1752_p1 + zext_ln1525_2_fu_1738_p1);

assign add_ln1525_4_fu_1796_p2 = (zext_ln1525_13_fu_1784_p1 + zext_ln1525_15_fu_1792_p1);

assign add_ln1525_5_fu_1806_p2 = (zext_ln1525_17_fu_1802_p1 + zext_ln1525_4_fu_1788_p1);

assign add_ln1525_6_fu_1904_p2 = (zext_ln1525_19_fu_1896_p1 + zext_ln1524_fu_1672_p1);

assign add_ln1525_7_fu_1914_p2 = (zext_ln1525_21_fu_1910_p1 + zext_ln1525_6_fu_1900_p1);

assign add_ln1525_8_fu_1946_p2 = (zext_ln1525_23_fu_1938_p1 + zext_ln1524_1_fu_1722_p1);

assign add_ln1525_9_fu_1956_p2 = (zext_ln1525_24_fu_1952_p1 + zext_ln1525_8_fu_1942_p1);

assign add_ln1525_fu_1696_p2 = (zext_ln1525_1_fu_1684_p1 + zext_ln1525_3_fu_1692_p1);

assign and_ln1061_1_fu_2014_p2 = (icmp_ln1061_fu_1666_p2 & icmp_ln1061_1_fu_1882_p2);

assign and_ln1061_2_fu_2206_p2 = (icmp_ln1061_2_fu_2074_p2 & icmp_ln1061_1_fu_1882_p2);

assign and_ln1061_3_fu_2398_p2 = (icmp_ln1061_3_fu_2266_p2 & icmp_ln1061_2_fu_2074_p2);

assign and_ln1061_fu_1822_p2 = (icmp_ln1061_fu_1666_p2 & icmp_ln1057_1_fu_1660_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln1109_reg_2954_pp0_iter2_reg == 1'd1) & (imgUnzip_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op123_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln1109_reg_2954_pp0_iter2_reg == 1'd1) & (imgUnzip_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op123_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln1109_reg_2954_pp0_iter2_reg == 1'd1) & (imgUnzip_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op123_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op123_read_state2 == 1'b1) & (imgRgb_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((icmp_ln1109_reg_2954_pp0_iter2_reg == 1'd1) & (imgUnzip_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_1452 = ((icmp_ln1057_reg_2950 == 1'd1) & (icmp_ln1051_reg_2946 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op123_read_state2 = ((icmp_ln1057_reg_2950 == 1'd1) & (icmp_ln1051_reg_2946 == 1'd0));
end

assign b_V_4_1_out = outpix_val_V_10_4_fu_304;

assign g_V_4_1_out = outpix_val_V_9_4_fu_288;

assign icmp_ln1051_fu_989_p2 = ((ap_sig_allocacmp_x_2 == p_cast_fu_817_p1) ? 1'b1 : 1'b0);

assign icmp_ln1057_1_fu_1660_p2 = ((luma_V_4_1_fu_256 < luma_V_3_1_fu_252) ? 1'b1 : 1'b0);

assign icmp_ln1057_fu_995_p2 = (($signed(ap_sig_allocacmp_x_2) < $signed(zext_ln1035_cast_fu_813_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1061_1_fu_1882_p2 = ((luma_V_2_1_fu_248 < luma_V_1_1_fu_244) ? 1'b1 : 1'b0);

assign icmp_ln1061_2_fu_2074_p2 = ((luma_V_1_1_fu_244 < luma_V_0_1_fu_356) ? 1'b1 : 1'b0);

assign icmp_ln1061_3_fu_2266_p2 = ((luma_V_0_1_fu_356 < zext_ln1082_fu_1380_p1) ? 1'b1 : 1'b0);

assign icmp_ln1061_fu_1666_p2 = ((luma_V_3_1_fu_252 < luma_V_2_1_fu_248) ? 1'b1 : 1'b0);

assign icmp_ln1109_fu_1001_p2 = (($signed(ap_sig_allocacmp_x_2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign imgUnzip_din = {{{{{{{{{{{{outpix_val_V_11_7_reg_3003}, {outpix_val_V_10_7_reg_3008}}, {outpix_val_V_9_7_reg_3013}}, {outpix_val_V_8_3_reg_2988}}, {outpix_val_V_7_3_reg_2993}}, {outpix_val_V_6_3_reg_2998}}, {outpix_val_V_5_3_reg_2973}}, {outpix_val_V_4_3_reg_2978}}, {outpix_val_V_3_3_reg_2983}}, {outpix_val_V_2_3_reg_2958}}, {outpix_val_V_1_3_reg_2963}}, {outpix_val_V_0_3_reg_2968}};

assign inpix_val_V_0_1_fu_1018_p1 = imgRgb_dout[7:0];

assign inpix_val_V_0_1_out = inpix_val_V_0_fu_308;

assign inpix_val_V_10_1_out = inpix_val_V_10_1_fu_348;

assign inpix_val_V_11_1_out = inpix_val_V_11_1_fu_352;

assign inpix_val_V_1_1_out = inpix_val_V_1_1_fu_312;

assign inpix_val_V_2_1_out = inpix_val_V_2_1_fu_316;

assign inpix_val_V_3_1_out = inpix_val_V_3_1_fu_320;

assign inpix_val_V_4_1_out = inpix_val_V_4_1_fu_324;

assign inpix_val_V_5_1_out = inpix_val_V_5_1_fu_328;

assign inpix_val_V_6_1_out = inpix_val_V_6_1_fu_332;

assign inpix_val_V_7_1_out = inpix_val_V_7_1_fu_336;

assign inpix_val_V_8_1_out = inpix_val_V_8_1_fu_340;

assign inpix_val_V_9_1_out = inpix_val_V_9_1_fu_344;

assign lshr_ln1079_1_fu_1306_p4 = {{inpix_val_V_0_fu_308[7:1]}};

assign lshr_ln1079_2_fu_1582_p4 = {{inpix_val_V_9_1_fu_344[7:1]}};

assign lshr_ln1079_4_fu_1384_p4 = {{inpix_val_V_5_1_fu_328[7:2]}};

assign lshr_ln1079_5_fu_1398_p4 = {{inpix_val_V_3_1_fu_320[7:1]}};

assign lshr_ln1079_8_fu_1476_p4 = {{inpix_val_V_8_1_fu_340[7:2]}};

assign lshr_ln1079_9_fu_1490_p4 = {{inpix_val_V_6_1_fu_332[7:1]}};

assign lshr_ln1079_s_fu_1568_p4 = {{inpix_val_V_11_1_fu_352[7:2]}};

assign lshr_ln1082_1_fu_1462_p4 = {{add_ln1079_5_fu_1456_p2[7:3]}};

assign lshr_ln1082_2_fu_1554_p4 = {{add_ln1079_8_fu_1548_p2[7:3]}};

assign lshr_ln1082_3_fu_1646_p4 = {{add_ln1079_11_fu_1640_p2[7:3]}};

assign lshr_ln1_fu_1370_p4 = {{add_ln1079_2_fu_1364_p2[7:3]}};

assign lshr_ln_fu_1292_p4 = {{inpix_val_V_2_1_fu_316[7:2]}};

assign luma_V_0_1_out = luma_V_0_1_fu_356;

assign luma_V_1_1_out = luma_V_1_1_fu_244;

assign luma_V_2_1_out = luma_V_2_1_fu_248;

assign luma_V_3_1_out = luma_V_3_1_fu_252;

assign luma_V_4_1_out = luma_V_4_1_fu_256;

assign or_ln1061_1_fu_2028_p2 = (icmp_ln1061_fu_1666_p2 | icmp_ln1061_1_fu_1882_p2);

assign or_ln1061_2_fu_2220_p2 = (icmp_ln1061_2_fu_2074_p2 | icmp_ln1061_1_fu_1882_p2);

assign or_ln1061_3_fu_2412_p2 = (icmp_ln1061_3_fu_2266_p2 | icmp_ln1061_2_fu_2074_p2);

assign or_ln1061_fu_1836_p2 = (icmp_ln1061_fu_1666_p2 | icmp_ln1057_1_fu_1660_p2);

assign outpix_val_V_0_1_fu_1762_p4 = {{add_ln1525_3_fu_1756_p2[9:2]}};

assign outpix_val_V_0_2_fu_1866_p3 = ((and_ln1061_fu_1822_p2[0:0] == 1'b1) ? outpix_val_V_0_fu_284 : outpix_val_V_0_1_fu_1762_p4);

assign outpix_val_V_0_3_fu_1874_p3 = ((or_ln1061_fu_1836_p2[0:0] == 1'b1) ? outpix_val_V_0_2_fu_1866_p3 : outpix_val_V_0_fu_284);

assign outpix_val_V_0_out = outpix_val_V_0_fu_284;

assign outpix_val_V_10_1_fu_2388_p4 = {{add_ln1525_23_fu_2382_p2[9:2]}};

assign outpix_val_V_10_6_fu_2426_p3 = ((and_ln1061_3_fu_2398_p2[0:0] == 1'b1) ? outpix_val_V_10_fu_368 : outpix_val_V_10_1_fu_2388_p4);

assign outpix_val_V_10_7_fu_2434_p3 = ((or_ln1061_3_fu_2412_p2[0:0] == 1'b1) ? outpix_val_V_10_6_fu_2426_p3 : outpix_val_V_10_fu_368);

assign outpix_val_V_10_out = outpix_val_V_10_fu_368;

assign outpix_val_V_11_1_fu_2304_p4 = {{add_ln1525_19_fu_2298_p2[9:2]}};

assign outpix_val_V_11_6_fu_2404_p3 = ((and_ln1061_3_fu_2398_p2[0:0] == 1'b1) ? outpix_val_V_11_fu_360 : outpix_val_V_11_1_fu_2304_p4);

assign outpix_val_V_11_7_fu_2418_p3 = ((or_ln1061_3_fu_2412_p2[0:0] == 1'b1) ? outpix_val_V_11_6_fu_2404_p3 : outpix_val_V_11_fu_360);

assign outpix_val_V_11_out = outpix_val_V_11_fu_360;

assign outpix_val_V_1_1_fu_1812_p4 = {{add_ln1525_5_fu_1806_p2[9:2]}};

assign outpix_val_V_1_2_fu_1850_p3 = ((and_ln1061_fu_1822_p2[0:0] == 1'b1) ? outpix_val_V_1_fu_300 : outpix_val_V_1_1_fu_1812_p4);

assign outpix_val_V_1_3_fu_1858_p3 = ((or_ln1061_fu_1836_p2[0:0] == 1'b1) ? outpix_val_V_1_2_fu_1850_p3 : outpix_val_V_1_fu_300);

assign outpix_val_V_1_out = outpix_val_V_1_fu_300;

assign outpix_val_V_2_1_fu_1712_p4 = {{add_ln1525_1_fu_1706_p2[9:2]}};

assign outpix_val_V_2_2_fu_1828_p3 = ((and_ln1061_fu_1822_p2[0:0] == 1'b1) ? outpix_val_V_2_fu_268 : outpix_val_V_2_1_fu_1712_p4);

assign outpix_val_V_2_3_fu_1842_p3 = ((or_ln1061_fu_1836_p2[0:0] == 1'b1) ? outpix_val_V_2_2_fu_1828_p3 : outpix_val_V_2_fu_268);

assign outpix_val_V_2_out = outpix_val_V_2_fu_268;

assign outpix_val_V_3_1_fu_1962_p4 = {{add_ln1525_9_fu_1956_p2[9:2]}};

assign outpix_val_V_3_2_fu_2058_p3 = ((and_ln1061_1_fu_2014_p2[0:0] == 1'b1) ? outpix_val_V_3_fu_280 : outpix_val_V_3_1_fu_1962_p4);

assign outpix_val_V_3_3_fu_2066_p3 = ((or_ln1061_1_fu_2028_p2[0:0] == 1'b1) ? outpix_val_V_3_2_fu_2058_p3 : outpix_val_V_3_fu_280);

assign outpix_val_V_3_out = outpix_val_V_3_fu_280;

assign outpix_val_V_4_1_fu_2004_p4 = {{add_ln1525_11_fu_1998_p2[9:2]}};

assign outpix_val_V_4_2_fu_2042_p3 = ((and_ln1061_1_fu_2014_p2[0:0] == 1'b1) ? outpix_val_V_4_fu_296 : outpix_val_V_4_1_fu_2004_p4);

assign outpix_val_V_4_3_fu_2050_p3 = ((or_ln1061_1_fu_2028_p2[0:0] == 1'b1) ? outpix_val_V_4_2_fu_2042_p3 : outpix_val_V_4_fu_296);

assign outpix_val_V_4_out = outpix_val_V_4_fu_296;

assign outpix_val_V_5_1_fu_1920_p4 = {{add_ln1525_7_fu_1914_p2[9:2]}};

assign outpix_val_V_5_2_fu_2020_p3 = ((and_ln1061_1_fu_2014_p2[0:0] == 1'b1) ? outpix_val_V_5_fu_264 : outpix_val_V_5_1_fu_1920_p4);

assign outpix_val_V_5_3_fu_2034_p3 = ((or_ln1061_1_fu_2028_p2[0:0] == 1'b1) ? outpix_val_V_5_2_fu_2020_p3 : outpix_val_V_5_fu_264);

assign outpix_val_V_5_out = outpix_val_V_5_fu_264;

assign outpix_val_V_6_1_fu_2154_p4 = {{add_ln1525_15_fu_2148_p2[9:2]}};

assign outpix_val_V_6_2_fu_2250_p3 = ((and_ln1061_2_fu_2206_p2[0:0] == 1'b1) ? outpix_val_V_6_fu_276 : outpix_val_V_6_1_fu_2154_p4);

assign outpix_val_V_6_3_fu_2258_p3 = ((or_ln1061_2_fu_2220_p2[0:0] == 1'b1) ? outpix_val_V_6_2_fu_2250_p3 : outpix_val_V_6_fu_276);

assign outpix_val_V_6_out = outpix_val_V_6_fu_276;

assign outpix_val_V_7_1_fu_2196_p4 = {{add_ln1525_17_fu_2190_p2[9:2]}};

assign outpix_val_V_7_2_fu_2234_p3 = ((and_ln1061_2_fu_2206_p2[0:0] == 1'b1) ? outpix_val_V_7_fu_292 : outpix_val_V_7_1_fu_2196_p4);

assign outpix_val_V_7_3_fu_2242_p3 = ((or_ln1061_2_fu_2220_p2[0:0] == 1'b1) ? outpix_val_V_7_2_fu_2234_p3 : outpix_val_V_7_fu_292);

assign outpix_val_V_7_out = outpix_val_V_7_fu_292;

assign outpix_val_V_8_1_fu_2112_p4 = {{add_ln1525_13_fu_2106_p2[9:2]}};

assign outpix_val_V_8_2_fu_2212_p3 = ((and_ln1061_2_fu_2206_p2[0:0] == 1'b1) ? outpix_val_V_8_fu_260 : outpix_val_V_8_1_fu_2112_p4);

assign outpix_val_V_8_3_fu_2226_p3 = ((or_ln1061_2_fu_2220_p2[0:0] == 1'b1) ? outpix_val_V_8_2_fu_2212_p3 : outpix_val_V_8_fu_260);

assign outpix_val_V_8_out = outpix_val_V_8_fu_260;

assign outpix_val_V_9_1_fu_2346_p4 = {{add_ln1525_21_fu_2340_p2[9:2]}};

assign outpix_val_V_9_6_fu_2442_p3 = ((and_ln1061_3_fu_2398_p2[0:0] == 1'b1) ? outpix_val_V_9_fu_364 : outpix_val_V_9_1_fu_2346_p4);

assign outpix_val_V_9_7_fu_2450_p3 = ((or_ln1061_3_fu_2412_p2[0:0] == 1'b1) ? outpix_val_V_9_6_fu_2442_p3 : outpix_val_V_9_fu_364);

assign outpix_val_V_9_out = outpix_val_V_9_fu_364;

assign p_cast_fu_817_p1 = empty;

assign r_V_4_1_out = outpix_val_V_11_4_fu_272;

assign shl_ln1524_10_fu_2356_p3 = {{outpix_val_V_10_fu_368}, {1'd0}};

assign shl_ln1524_1_fu_1726_p3 = {{outpix_val_V_0_fu_284}, {1'd0}};

assign shl_ln1524_2_fu_1776_p3 = {{outpix_val_V_1_fu_300}, {1'd0}};

assign shl_ln1524_3_fu_1888_p3 = {{outpix_val_V_5_fu_264}, {1'd0}};

assign shl_ln1524_4_fu_1930_p3 = {{outpix_val_V_3_fu_280}, {1'd0}};

assign shl_ln1524_5_fu_1972_p3 = {{outpix_val_V_4_fu_296}, {1'd0}};

assign shl_ln1524_6_fu_2080_p3 = {{outpix_val_V_8_fu_260}, {1'd0}};

assign shl_ln1524_7_fu_2122_p3 = {{outpix_val_V_6_fu_276}, {1'd0}};

assign shl_ln1524_8_fu_2164_p3 = {{outpix_val_V_7_fu_292}, {1'd0}};

assign shl_ln1524_9_fu_2272_p3 = {{outpix_val_V_11_fu_360}, {1'd0}};

assign shl_ln1524_s_fu_2314_p3 = {{outpix_val_V_9_fu_364}, {1'd0}};

assign shl_ln_fu_1676_p3 = {{outpix_val_V_2_fu_268}, {1'd0}};

assign trunc_ln1079_1_fu_1334_p4 = {{inpix_val_V_1_1_fu_312[7:3]}};

assign trunc_ln1079_2_fu_1412_p4 = {{inpix_val_V_3_1_fu_320[7:3]}};

assign trunc_ln1079_3_fu_1426_p4 = {{inpix_val_V_4_1_fu_324[7:3]}};

assign trunc_ln1079_4_fu_1504_p4 = {{inpix_val_V_6_1_fu_332[7:3]}};

assign trunc_ln1079_5_fu_1518_p4 = {{inpix_val_V_7_1_fu_336[7:3]}};

assign trunc_ln1079_6_fu_1596_p4 = {{inpix_val_V_9_1_fu_344[7:3]}};

assign trunc_ln1079_7_fu_1610_p4 = {{inpix_val_V_10_1_fu_348[7:3]}};

assign trunc_ln_fu_1320_p4 = {{inpix_val_V_0_fu_308[7:3]}};

assign x_3_fu_1007_p2 = (ap_sig_allocacmp_x_2 + 32'd4);

assign zext_ln1035_cast_fu_813_p1 = zext_ln1035;

assign zext_ln1079_10_fu_1620_p1 = trunc_ln1079_7_fu_1610_p4;

assign zext_ln1079_11_fu_1636_p1 = add_ln1079_10_fu_1630_p2;

assign zext_ln1079_12_fu_1302_p1 = lshr_ln_fu_1292_p4;

assign zext_ln1079_13_fu_1316_p1 = lshr_ln1079_1_fu_1306_p4;

assign zext_ln1079_14_fu_1394_p1 = lshr_ln1079_4_fu_1384_p4;

assign zext_ln1079_15_fu_1408_p1 = lshr_ln1079_5_fu_1398_p4;

assign zext_ln1079_16_fu_1486_p1 = lshr_ln1079_8_fu_1476_p4;

assign zext_ln1079_17_fu_1500_p1 = lshr_ln1079_9_fu_1490_p4;

assign zext_ln1079_18_fu_1578_p1 = lshr_ln1079_s_fu_1568_p4;

assign zext_ln1079_19_fu_1592_p1 = lshr_ln1079_2_fu_1582_p4;

assign zext_ln1079_1_fu_1344_p1 = trunc_ln1079_1_fu_1334_p4;

assign zext_ln1079_2_fu_1360_p1 = add_ln1079_1_fu_1354_p2;

assign zext_ln1079_3_fu_1422_p1 = trunc_ln1079_2_fu_1412_p4;

assign zext_ln1079_4_fu_1436_p1 = trunc_ln1079_3_fu_1426_p4;

assign zext_ln1079_5_fu_1452_p1 = add_ln1079_4_fu_1446_p2;

assign zext_ln1079_6_fu_1514_p1 = trunc_ln1079_4_fu_1504_p4;

assign zext_ln1079_7_fu_1528_p1 = trunc_ln1079_5_fu_1518_p4;

assign zext_ln1079_8_fu_1544_p1 = add_ln1079_7_fu_1538_p2;

assign zext_ln1079_9_fu_1606_p1 = trunc_ln1079_6_fu_1596_p4;

assign zext_ln1079_fu_1330_p1 = trunc_ln_fu_1320_p4;

assign zext_ln1082_1_fu_1472_p1 = lshr_ln1082_1_fu_1462_p4;

assign zext_ln1082_2_fu_1564_p1 = lshr_ln1082_2_fu_1554_p4;

assign zext_ln1082_3_fu_1656_p1 = lshr_ln1082_3_fu_1646_p4;

assign zext_ln1082_fu_1380_p1 = lshr_ln1_fu_1370_p4;

assign zext_ln1524_1_fu_1722_p1 = outpix_val_V_0_fu_284;

assign zext_ln1524_2_fu_1772_p1 = outpix_val_V_1_fu_300;

assign zext_ln1524_fu_1672_p1 = outpix_val_V_2_fu_268;

assign zext_ln1525_10_fu_1984_p1 = shl_ln1524_5_fu_1972_p3;

assign zext_ln1525_11_fu_1752_p1 = add_ln1525_2_fu_1746_p2;

assign zext_ln1525_12_fu_2092_p1 = shl_ln1524_6_fu_2080_p3;

assign zext_ln1525_13_fu_1784_p1 = outpix_val_V_4_fu_296;

assign zext_ln1525_14_fu_2134_p1 = shl_ln1524_7_fu_2122_p3;

assign zext_ln1525_15_fu_1792_p1 = outpix_val_V_10_4_fu_304;

assign zext_ln1525_16_fu_2176_p1 = shl_ln1524_8_fu_2164_p3;

assign zext_ln1525_17_fu_1802_p1 = add_ln1525_4_fu_1796_p2;

assign zext_ln1525_18_fu_2284_p1 = shl_ln1524_9_fu_2272_p3;

assign zext_ln1525_19_fu_1896_p1 = outpix_val_V_8_fu_260;

assign zext_ln1525_1_fu_1684_p1 = outpix_val_V_5_fu_264;

assign zext_ln1525_20_fu_2326_p1 = shl_ln1524_s_fu_2314_p3;

assign zext_ln1525_21_fu_1910_p1 = add_ln1525_6_fu_1904_p2;

assign zext_ln1525_22_fu_2368_p1 = shl_ln1524_10_fu_2356_p3;

assign zext_ln1525_23_fu_1938_p1 = outpix_val_V_6_fu_276;

assign zext_ln1525_24_fu_1952_p1 = add_ln1525_8_fu_1946_p2;

assign zext_ln1525_25_fu_1980_p1 = outpix_val_V_7_fu_292;

assign zext_ln1525_26_fu_1994_p1 = add_ln1525_10_fu_1988_p2;

assign zext_ln1525_27_fu_2088_p1 = outpix_val_V_11_fu_360;

assign zext_ln1525_28_fu_2102_p1 = add_ln1525_12_fu_2096_p2;

assign zext_ln1525_29_fu_2130_p1 = outpix_val_V_9_fu_364;

assign zext_ln1525_2_fu_1738_p1 = shl_ln1524_1_fu_1726_p3;

assign zext_ln1525_30_fu_2144_p1 = add_ln1525_14_fu_2138_p2;

assign zext_ln1525_31_fu_2172_p1 = outpix_val_V_10_fu_368;

assign zext_ln1525_32_fu_2186_p1 = add_ln1525_16_fu_2180_p2;

assign zext_ln1525_33_fu_2280_p1 = inpix_val_V_2_1_fu_316;

assign zext_ln1525_34_fu_2294_p1 = add_ln1525_18_fu_2288_p2;

assign zext_ln1525_35_fu_2322_p1 = inpix_val_V_0_fu_308;

assign zext_ln1525_36_fu_2336_p1 = add_ln1525_20_fu_2330_p2;

assign zext_ln1525_37_fu_2364_p1 = inpix_val_V_1_1_fu_312;

assign zext_ln1525_38_fu_2378_p1 = add_ln1525_22_fu_2372_p2;

assign zext_ln1525_3_fu_1692_p1 = outpix_val_V_11_4_fu_272;

assign zext_ln1525_4_fu_1788_p1 = shl_ln1524_2_fu_1776_p3;

assign zext_ln1525_5_fu_1702_p1 = add_ln1525_fu_1696_p2;

assign zext_ln1525_6_fu_1900_p1 = shl_ln1524_3_fu_1888_p3;

assign zext_ln1525_7_fu_1734_p1 = outpix_val_V_3_fu_280;

assign zext_ln1525_8_fu_1942_p1 = shl_ln1524_4_fu_1930_p3;

assign zext_ln1525_9_fu_1742_p1 = outpix_val_V_9_4_fu_288;

assign zext_ln1525_fu_1688_p1 = shl_ln_fu_1676_p3;

endmodule //design_0_v_demosaic_0_0_ZipperRemoval_Pipeline_VITIS_LOOP_1051_2

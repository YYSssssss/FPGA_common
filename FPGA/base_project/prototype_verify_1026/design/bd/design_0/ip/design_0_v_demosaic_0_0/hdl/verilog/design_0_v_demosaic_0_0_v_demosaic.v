// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="design_0_v_demosaic_0_0_v_demosaic,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu15eg-ffvb1156-2-i,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.650000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=59,HLS_SYN_DSP=0,HLS_SYN_FF=15787,HLS_SYN_LUT=29003,HLS_VERSION=2021_1}" *)

module design_0_v_demosaic_0_0_v_demosaic (
// synthesis translate_off
    kernel_block,
// synthesis translate_on
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        s_axis_video_TDATA,
        s_axis_video_TKEEP,
        s_axis_video_TSTRB,
        s_axis_video_TUSER,
        s_axis_video_TLAST,
        s_axis_video_TID,
        s_axis_video_TDEST,
        m_axis_video_TDATA,
        m_axis_video_TKEEP,
        m_axis_video_TSTRB,
        m_axis_video_TUSER,
        m_axis_video_TLAST,
        m_axis_video_TID,
        m_axis_video_TDEST,
        s_axis_video_TVALID,
        s_axis_video_TREADY,
        m_axis_video_TVALID,
        m_axis_video_TREADY
);

parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

// synthesis translate_off
output kernel_block;
// synthesis translate_on
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [31:0] s_axis_video_TDATA;
input  [3:0] s_axis_video_TKEEP;
input  [3:0] s_axis_video_TSTRB;
input  [0:0] s_axis_video_TUSER;
input  [0:0] s_axis_video_TLAST;
input  [0:0] s_axis_video_TID;
input  [0:0] s_axis_video_TDEST;
output  [95:0] m_axis_video_TDATA;
output  [11:0] m_axis_video_TKEEP;
output  [11:0] m_axis_video_TSTRB;
output  [0:0] m_axis_video_TUSER;
output  [0:0] m_axis_video_TLAST;
output  [0:0] m_axis_video_TID;
output  [0:0] m_axis_video_TDEST;
input   s_axis_video_TVALID;
output   s_axis_video_TREADY;
output   m_axis_video_TVALID;
input   m_axis_video_TREADY;

 reg    ap_rst_n_inv;
wire   [15:0] width;
wire   [15:0] height;
wire   [15:0] bayer_phase;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    Block_split1_proc_U0_ap_start;
wire    Block_split1_proc_U0_ap_done;
wire    Block_split1_proc_U0_ap_continue;
wire    Block_split1_proc_U0_ap_idle;
wire    Block_split1_proc_U0_ap_ready;
wire   [15:0] Block_split1_proc_U0_ap_return;
wire    bayer_phase_assign_channel_full_n;
wire    AXIvideo2MultiBayer_U0_ap_start;
wire    AXIvideo2MultiBayer_U0_ap_done;
wire    AXIvideo2MultiBayer_U0_ap_continue;
wire    AXIvideo2MultiBayer_U0_ap_idle;
wire    AXIvideo2MultiBayer_U0_ap_ready;
wire    AXIvideo2MultiBayer_U0_s_axis_video_TREADY;
wire   [31:0] AXIvideo2MultiBayer_U0_imgBayer_din;
wire    AXIvideo2MultiBayer_U0_imgBayer_write;
wire    Debayer_U0_ap_start;
wire    Debayer_U0_start_out;
wire    Debayer_U0_start_write;
wire    Debayer_U0_imgBayer_read;
wire   [95:0] Debayer_U0_imgRgb_din;
wire    Debayer_U0_imgRgb_write;
wire    Debayer_U0_ap_done;
wire    Debayer_U0_ap_ready;
wire    Debayer_U0_ap_idle;
wire    Debayer_U0_ap_continue;
wire    ZipperRemoval_U0_ap_start;
wire    ZipperRemoval_U0_ap_done;
wire    ZipperRemoval_U0_ap_continue;
wire    ZipperRemoval_U0_ap_idle;
wire    ZipperRemoval_U0_ap_ready;
wire    ZipperRemoval_U0_start_out;
wire    ZipperRemoval_U0_start_write;
wire    ZipperRemoval_U0_imgRgb_read;
wire   [95:0] ZipperRemoval_U0_imgUnzip_din;
wire    ZipperRemoval_U0_imgUnzip_write;
wire    MultiPixStream2AXIvideo_U0_ap_start;
wire    MultiPixStream2AXIvideo_U0_ap_done;
wire    MultiPixStream2AXIvideo_U0_ap_continue;
wire    MultiPixStream2AXIvideo_U0_ap_idle;
wire    MultiPixStream2AXIvideo_U0_ap_ready;
wire    MultiPixStream2AXIvideo_U0_imgUnzip_read;
wire   [95:0] MultiPixStream2AXIvideo_U0_m_axis_video_TDATA;
wire    MultiPixStream2AXIvideo_U0_m_axis_video_TVALID;
wire   [11:0] MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP;
wire   [11:0] MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TUSER;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TLAST;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TID;
wire   [0:0] MultiPixStream2AXIvideo_U0_m_axis_video_TDEST;
wire   [15:0] bayer_phase_assign_channel_dout;
wire    bayer_phase_assign_channel_empty_n;
wire    imgBayer_full_n;
wire   [31:0] imgBayer_dout;
wire    imgBayer_empty_n;
wire    imgRgb_full_n;
wire   [95:0] imgRgb_dout;
wire    imgRgb_empty_n;
wire    imgUnzip_full_n;
wire   [95:0] imgUnzip_dout;
wire    imgUnzip_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_Block_split1_proc_U0_ap_ready;
wire    ap_sync_Block_split1_proc_U0_ap_ready;
reg    ap_sync_reg_AXIvideo2MultiBayer_U0_ap_ready;
wire    ap_sync_AXIvideo2MultiBayer_U0_ap_ready;
wire   [0:0] start_for_ZipperRemoval_U0_din;
wire    start_for_ZipperRemoval_U0_full_n;
wire   [0:0] start_for_ZipperRemoval_U0_dout;
wire    start_for_ZipperRemoval_U0_empty_n;
wire   [0:0] start_for_MultiPixStream2AXIvideo_U0_din;
wire    start_for_MultiPixStream2AXIvideo_U0_full_n;
wire   [0:0] start_for_MultiPixStream2AXIvideo_U0_dout;
wire    start_for_MultiPixStream2AXIvideo_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_Block_split1_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_AXIvideo2MultiBayer_U0_ap_ready = 1'b0;
end

design_0_v_demosaic_0_0_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .width(width),
    .height(height),
    .bayer_phase(bayer_phase),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

design_0_v_demosaic_0_0_Block_split1_proc Block_split1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_split1_proc_U0_ap_start),
    .ap_done(Block_split1_proc_U0_ap_done),
    .ap_continue(Block_split1_proc_U0_ap_continue),
    .ap_idle(Block_split1_proc_U0_ap_idle),
    .ap_ready(Block_split1_proc_U0_ap_ready),
    .bayer_phase(bayer_phase),
    .ap_return(Block_split1_proc_U0_ap_return)
);

design_0_v_demosaic_0_0_AXIvideo2MultiBayer AXIvideo2MultiBayer_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2MultiBayer_U0_ap_start),
    .ap_done(AXIvideo2MultiBayer_U0_ap_done),
    .ap_continue(AXIvideo2MultiBayer_U0_ap_continue),
    .ap_idle(AXIvideo2MultiBayer_U0_ap_idle),
    .ap_ready(AXIvideo2MultiBayer_U0_ap_ready),
    .s_axis_video_TDATA(s_axis_video_TDATA),
    .s_axis_video_TVALID(s_axis_video_TVALID),
    .s_axis_video_TREADY(AXIvideo2MultiBayer_U0_s_axis_video_TREADY),
    .s_axis_video_TKEEP(s_axis_video_TKEEP),
    .s_axis_video_TSTRB(s_axis_video_TSTRB),
    .s_axis_video_TUSER(s_axis_video_TUSER),
    .s_axis_video_TLAST(s_axis_video_TLAST),
    .s_axis_video_TID(s_axis_video_TID),
    .s_axis_video_TDEST(s_axis_video_TDEST),
    .imgBayer_din(AXIvideo2MultiBayer_U0_imgBayer_din),
    .imgBayer_full_n(imgBayer_full_n),
    .imgBayer_write(AXIvideo2MultiBayer_U0_imgBayer_write),
    .Height(height),
    .WidthIn(width)
);

design_0_v_demosaic_0_0_Debayer Debayer_U0(
    .ap_start(Debayer_U0_ap_start),
    .start_full_n(start_for_ZipperRemoval_U0_full_n),
    .start_out(Debayer_U0_start_out),
    .start_write(Debayer_U0_start_write),
    .imgBayer_dout(imgBayer_dout),
    .imgBayer_empty_n(imgBayer_empty_n),
    .imgBayer_read(Debayer_U0_imgBayer_read),
    .imgRgb_din(Debayer_U0_imgRgb_din),
    .imgRgb_full_n(imgRgb_full_n),
    .imgRgb_write(Debayer_U0_imgRgb_write),
    .height(height),
    .width(width),
    .p_read(bayer_phase_assign_channel_dout),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .height_ap_vld(1'b1),
    .width_ap_vld(1'b1),
    .p_read_ap_vld(1'b0),
    .ap_done(Debayer_U0_ap_done),
    .ap_ready(Debayer_U0_ap_ready),
    .ap_idle(Debayer_U0_ap_idle),
    .ap_continue(Debayer_U0_ap_continue)
);

design_0_v_demosaic_0_0_ZipperRemoval ZipperRemoval_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ZipperRemoval_U0_ap_start),
    .start_full_n(start_for_MultiPixStream2AXIvideo_U0_full_n),
    .ap_done(ZipperRemoval_U0_ap_done),
    .ap_continue(ZipperRemoval_U0_ap_continue),
    .ap_idle(ZipperRemoval_U0_ap_idle),
    .ap_ready(ZipperRemoval_U0_ap_ready),
    .start_out(ZipperRemoval_U0_start_out),
    .start_write(ZipperRemoval_U0_start_write),
    .imgRgb_dout(imgRgb_dout),
    .imgRgb_empty_n(imgRgb_empty_n),
    .imgRgb_read(ZipperRemoval_U0_imgRgb_read),
    .imgUnzip_din(ZipperRemoval_U0_imgUnzip_din),
    .imgUnzip_full_n(imgUnzip_full_n),
    .imgUnzip_write(ZipperRemoval_U0_imgUnzip_write),
    .height(height),
    .width(width)
);

design_0_v_demosaic_0_0_MultiPixStream2AXIvideo MultiPixStream2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(MultiPixStream2AXIvideo_U0_ap_start),
    .ap_done(MultiPixStream2AXIvideo_U0_ap_done),
    .ap_continue(MultiPixStream2AXIvideo_U0_ap_continue),
    .ap_idle(MultiPixStream2AXIvideo_U0_ap_idle),
    .ap_ready(MultiPixStream2AXIvideo_U0_ap_ready),
    .imgUnzip_dout(imgUnzip_dout),
    .imgUnzip_empty_n(imgUnzip_empty_n),
    .imgUnzip_read(MultiPixStream2AXIvideo_U0_imgUnzip_read),
    .m_axis_video_TDATA(MultiPixStream2AXIvideo_U0_m_axis_video_TDATA),
    .m_axis_video_TVALID(MultiPixStream2AXIvideo_U0_m_axis_video_TVALID),
    .m_axis_video_TREADY(m_axis_video_TREADY),
    .m_axis_video_TKEEP(MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP),
    .m_axis_video_TSTRB(MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB),
    .m_axis_video_TUSER(MultiPixStream2AXIvideo_U0_m_axis_video_TUSER),
    .m_axis_video_TLAST(MultiPixStream2AXIvideo_U0_m_axis_video_TLAST),
    .m_axis_video_TID(MultiPixStream2AXIvideo_U0_m_axis_video_TID),
    .m_axis_video_TDEST(MultiPixStream2AXIvideo_U0_m_axis_video_TDEST),
    .Height(height),
    .WidthOut(width)
);

design_0_v_demosaic_0_0_fifo_w16_d2_S_x bayer_phase_assign_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split1_proc_U0_ap_return),
    .if_full_n(bayer_phase_assign_channel_full_n),
    .if_write(Block_split1_proc_U0_ap_done),
    .if_dout(bayer_phase_assign_channel_dout),
    .if_empty_n(bayer_phase_assign_channel_empty_n),
    .if_read(Debayer_U0_ap_ready)
);

design_0_v_demosaic_0_0_fifo_w32_d2_S imgBayer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2MultiBayer_U0_imgBayer_din),
    .if_full_n(imgBayer_full_n),
    .if_write(AXIvideo2MultiBayer_U0_imgBayer_write),
    .if_dout(imgBayer_dout),
    .if_empty_n(imgBayer_empty_n),
    .if_read(Debayer_U0_imgBayer_read)
);

design_0_v_demosaic_0_0_fifo_w96_d2_S_x imgRgb_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Debayer_U0_imgRgb_din),
    .if_full_n(imgRgb_full_n),
    .if_write(Debayer_U0_imgRgb_write),
    .if_dout(imgRgb_dout),
    .if_empty_n(imgRgb_empty_n),
    .if_read(ZipperRemoval_U0_imgRgb_read)
);

design_0_v_demosaic_0_0_fifo_w96_d2_S_x imgUnzip_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ZipperRemoval_U0_imgUnzip_din),
    .if_full_n(imgUnzip_full_n),
    .if_write(ZipperRemoval_U0_imgUnzip_write),
    .if_dout(imgUnzip_dout),
    .if_empty_n(imgUnzip_empty_n),
    .if_read(MultiPixStream2AXIvideo_U0_imgUnzip_read)
);

design_0_v_demosaic_0_0_start_for_ZipperRemoval_U0 start_for_ZipperRemoval_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_ZipperRemoval_U0_din),
    .if_full_n(start_for_ZipperRemoval_U0_full_n),
    .if_write(Debayer_U0_start_write),
    .if_dout(start_for_ZipperRemoval_U0_dout),
    .if_empty_n(start_for_ZipperRemoval_U0_empty_n),
    .if_read(ZipperRemoval_U0_ap_ready)
);

design_0_v_demosaic_0_0_start_for_MultiPixStream2AXIvideo_U0 start_for_MultiPixStream2AXIvideo_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_MultiPixStream2AXIvideo_U0_din),
    .if_full_n(start_for_MultiPixStream2AXIvideo_U0_full_n),
    .if_write(ZipperRemoval_U0_start_write),
    .if_dout(start_for_MultiPixStream2AXIvideo_U0_dout),
    .if_empty_n(start_for_MultiPixStream2AXIvideo_U0_empty_n),
    .if_read(MultiPixStream2AXIvideo_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_AXIvideo2MultiBayer_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AXIvideo2MultiBayer_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIvideo2MultiBayer_U0_ap_ready <= ap_sync_AXIvideo2MultiBayer_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_split1_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_split1_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_split1_proc_U0_ap_ready <= ap_sync_Block_split1_proc_U0_ap_ready;
        end
    end
end

assign AXIvideo2MultiBayer_U0_ap_continue = 1'b1;

assign AXIvideo2MultiBayer_U0_ap_start = ((ap_sync_reg_AXIvideo2MultiBayer_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_split1_proc_U0_ap_continue = bayer_phase_assign_channel_full_n;

assign Block_split1_proc_U0_ap_start = ((ap_sync_reg_Block_split1_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign Debayer_U0_ap_continue = 1'b1;

assign Debayer_U0_ap_start = bayer_phase_assign_channel_empty_n;

assign MultiPixStream2AXIvideo_U0_ap_continue = 1'b1;

assign MultiPixStream2AXIvideo_U0_ap_start = start_for_MultiPixStream2AXIvideo_U0_empty_n;

assign ZipperRemoval_U0_ap_continue = 1'b1;

assign ZipperRemoval_U0_ap_start = start_for_ZipperRemoval_U0_empty_n;

assign ap_done = MultiPixStream2AXIvideo_U0_ap_done;

assign ap_idle = ((bayer_phase_assign_channel_empty_n ^ 1'b1) & ZipperRemoval_U0_ap_idle & MultiPixStream2AXIvideo_U0_ap_idle & Debayer_U0_ap_idle & Block_split1_proc_U0_ap_idle & AXIvideo2MultiBayer_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_AXIvideo2MultiBayer_U0_ap_ready = (ap_sync_reg_AXIvideo2MultiBayer_U0_ap_ready | AXIvideo2MultiBayer_U0_ap_ready);

assign ap_sync_Block_split1_proc_U0_ap_ready = (ap_sync_reg_Block_split1_proc_U0_ap_ready | Block_split1_proc_U0_ap_ready);

assign ap_sync_ready = (ap_sync_Block_split1_proc_U0_ap_ready & ap_sync_AXIvideo2MultiBayer_U0_ap_ready);

assign m_axis_video_TDATA = MultiPixStream2AXIvideo_U0_m_axis_video_TDATA;

assign m_axis_video_TDEST = MultiPixStream2AXIvideo_U0_m_axis_video_TDEST;

assign m_axis_video_TID = MultiPixStream2AXIvideo_U0_m_axis_video_TID;

assign m_axis_video_TKEEP = MultiPixStream2AXIvideo_U0_m_axis_video_TKEEP;

assign m_axis_video_TLAST = MultiPixStream2AXIvideo_U0_m_axis_video_TLAST;

assign m_axis_video_TSTRB = MultiPixStream2AXIvideo_U0_m_axis_video_TSTRB;

assign m_axis_video_TUSER = MultiPixStream2AXIvideo_U0_m_axis_video_TUSER;

assign m_axis_video_TVALID = MultiPixStream2AXIvideo_U0_m_axis_video_TVALID;

assign s_axis_video_TREADY = AXIvideo2MultiBayer_U0_s_axis_video_TREADY;

assign start_for_MultiPixStream2AXIvideo_U0_din = 1'b1;

assign start_for_ZipperRemoval_U0_din = 1'b1;


// synthesis translate_off
`include "design_0_v_demosaic_0_0_hls_deadlock_detector.vh"
`include "design_0_v_demosaic_0_0_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //design_0_v_demosaic_0_0_v_demosaic

